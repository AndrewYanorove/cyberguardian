from flask import render_template, request, jsonify, session
from flask_login import login_required, current_user
from . import education_bp
from datetime import datetime
import json

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∫—É—Ä—Å–æ–≤ —Å –æ—á–µ–Ω—å –ø–æ–¥—Ä–æ–±–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º
COURSES = {
    'cybersecurity-basics': {
        'id': 'cybersecurity-basics',
        'title': 'üîê –û—Å–Ω–æ–≤—ã –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        'description': '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –ø–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º —Ü–∏—Ñ—Ä–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –û—Ç –æ—Å–Ω–æ–≤ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –∑–∞—â–∏—Ç—ã.',
        'icon': 'bi-shield-check',
        'difficulty': 'beginner',
        'estimated_time': '15 —á–∞—Å–æ–≤',
        'category': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        'level': '–ù–∞—á–∞–ª—å–Ω—ã–π',
        'rating': 4.8,
        'students_count': 12500,
        'final_exam': {
            'title': '–§–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω –ø–æ –æ—Å–Ω–æ–≤–∞–º –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
            'duration': 60,
            'passing_score': 70,
            'questions': [
                {
                    'question': '–ö–∞–∫–æ–π –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ—Ç–∏–≤ —Ñ–∏—à–∏–Ω–≥–æ–≤—ã—Ö –∞—Ç–∞–∫?',
                    'options': [
                        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –ø–∞—Ä–æ–ª–µ–π',
                        '–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
                        '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞',
                        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤'
                    ],
                    'correct': 1,
                    'explanation': '–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–ª–æ–∂–Ω—è–µ—Ç –¥–æ—Å—Ç—É–ø –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∫ –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–∞–º –¥–∞–∂–µ –ø—Ä–∏ —É—Ç–µ—á–∫–µ –ø–∞—Ä–æ–ª–µ–π.'
                },
                {
                    'question': '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ VPN?',
                    'options': [
                        'Virtual Private Network',
                        'Very Protected Network', 
                        'Virtual Public Network',
                        'Verified Private Network'
                    ],
                    'correct': 0,
                    'explanation': 'VPN (Virtual Private Network) - —ç—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è, —Å–æ–∑–¥–∞—é—â–∞—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–≤–µ—Ä—Ö –ø—É–±–ª–∏—á–Ω–æ–π —Å–µ—Ç–∏.'
                },
                {
                    'question': '–ö–∞–∫–æ–π —Ç–∏–ø –∞—Ç–∞–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω–∂–µ–Ω–µ—Ä–∏—é?',
                    'options': [
                        'DDoS –∞—Ç–∞–∫–∞',
                        '–§–∏—à–∏–Ω–≥',
                        'SQL –∏–Ω—ä–µ–∫—Ü–∏—è',
                        'XSS –∞—Ç–∞–∫–∞'
                    ],
                    'correct': 1,
                    'explanation': '–§–∏—à–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏ –¥–ª—è –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ –ª—é–¥—å–º–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'
                },
                {
                    'question': '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–æ—Ç–Ω–µ—Ç?',
                    'options': [
                        '–ê–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
                        '–°–µ—Ç—å –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤',
                        '–¢–∏–ø —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è',
                        '–ú–µ—Ç–æ–¥ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è'
                    ],
                    'correct': 1,
                    'explanation': '–ë–æ—Ç–Ω–µ—Ç - —ç—Ç–æ —Å–µ—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤, –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–º –ü–û –∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–º –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞—Ç–∞–∫.'
                },
                {
                    'question': '–ö–∞–∫–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å–∞–º—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–ª—è Wi-Fi?',
                    'options': [
                        'WEP',
                        'WPA',
                        'WPA2',
                        'WPA3'
                    ],
                    'correct': 3,
                    'explanation': 'WPA3 - —Å–∞–º—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã—Ö —Å–µ—Ç–µ–π.'
                }
            ]
        },
        'modules': [
            {
                'id': 'module-1',
                'title': '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
                'description': '–ë–∞–∑–æ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è, —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è –∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ü–∏—Ñ—Ä–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ò–∑—É—á–∏—Ç–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
                'order': 1,
                'lessons': [
                    {
                        'id': 'lesson-1-1',
                        'title': '–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –ø–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?',
                        'type': 'text',
                        'duration': 45,
                        'order': 1,
                        'content': [
                            {'type': 'text', 'content': '–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - —ç—Ç–æ –ø—Ä–∞–∫—Ç–∏–∫–∞ –∑–∞—â–∏—Ç—ã —Å–∏—Å—Ç–µ–º, —Å–µ—Ç–µ–π, –ø—Ä–æ–≥—Ä–∞–º–º –∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∞—Ç–∞–∫. –≠—Ç–∏ –∞—Ç–∞–∫–∏ –æ–±—ã—á–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –≤—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –±–∏–∑–Ω–µ—Å–∞.'},
                            {'type': 'tip', 'content': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∏–±–µ—Ä–∞—Ç–∞–∫–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—Å–µ –±–æ–ª–µ–µ –∏–∑–æ—â—Ä–µ–Ω–Ω—ã–º–∏ –∏ –º–æ–≥—É—Ç –Ω–∞–Ω–µ—Å—Ç–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —É—â–µ—Ä–± –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —Ç–∞–∫ –∏ –∫—Ä—É–ø–Ω—ã–º –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è–º.'},
                            {'type': 'warning', 'content': '–ü–æ –¥–∞–Ω–Ω—ã–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, —É—â–µ—Ä–± –æ—Ç –∫–∏–±–µ—Ä–ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫ 2025 –≥–æ–¥—É –º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—å 10.5 —Ç—Ä–∏–ª–ª–∏–æ–Ω–æ–≤ –¥–æ–ª–ª–∞—Ä–æ–≤ –µ–∂–µ–≥–æ–¥–Ω–æ.'},
                            {'type': 'text', 'content': '–û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—Ç—Ä–∏–∞–¥–∞ CIA):'},
                            {'type': 'text', 'content': '‚Ä¢ üîí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å - –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞'},
                            {'type': 'text', 'content': '‚Ä¢ ‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å - –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª–Ω–æ—Ç—ã –¥–∞–Ω–Ω—ã—Ö'},
                            {'type': 'text', 'content': '‚Ä¢ ‚ö° –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å - –≥–∞—Ä–∞–Ω—Ç–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –∏ —Å–∏—Å—Ç–µ–º–∞–º, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ'}
                        ],
                        'quiz': [
                            {
                                'question': '–ö–∞–∫–∞—è –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π –ù–ï —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–ª—å—é –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏?',
                                'options': [
                                    '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å',
                                    '–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö',
                                    '–¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö', 
                                    '–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º'
                                ],
                                'correct': 1,
                                'explanation': '–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–∞–∂–Ω–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–ª—å—é –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'
                            },
                            {
                                'question': '–ö–∞–∫–æ–π –≥–æ–¥–æ–≤–æ–π —É—â–µ—Ä–± –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç—Å—è –æ—Ç –∫–∏–±–µ—Ä–ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫ 2025 –≥–æ–¥—É?',
                                'options': [
                                    '1 –º–∏–ª–ª–∏–∞—Ä–¥ –¥–æ–ª–ª–∞—Ä–æ–≤',
                                    '500 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ –¥–æ–ª–ª–∞—Ä–æ–≤',
                                    '10.5 —Ç—Ä–∏–ª–ª–∏–æ–Ω–æ–≤ –¥–æ–ª–ª–∞—Ä–æ–≤',
                                    '100 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –¥–æ–ª–ª–∞—Ä–æ–≤'
                                ],
                                'correct': 2,
                                'explanation': '–°–æ–≥–ª–∞—Å–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º, —É—â–µ—Ä–± –º–æ–∂–µ—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—å 10.5 —Ç—Ä–∏–ª–ª–∏–æ–Ω–æ–≤ –¥–æ–ª–ª–∞—Ä–æ–≤, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ–π.'
                            }
                        ]
                    },
                    {
                        'id': 'lesson-1-2', 
                        'title': '–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑ –∏ —ç–≤–æ–ª—é—Ü–∏—è –∑–∞—â–∏—Ç—ã',
                        'type': 'text',
                        'duration': 60,
                        'order': 2,
                        'content': [
                            {'type': 'text', 'content': '–≠–≤–æ–ª—é—Ü–∏—è –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑ –ø—Ä–æ—à–ª–∞ –¥–ª–∏–Ω–Ω—ã–π –ø—É—Ç—å –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö –≤–∏—Ä—É—Å–æ–≤ –¥–æ —Å–ª–æ–∂–Ω—ã—Ö —Ü–µ–ª–µ–≤—ã—Ö –∞—Ç–∞–∫. –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –±—É–¥—É—â–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏.'},
                            {'type': 'text', 'content': 'üìÖ 1970-1980-–µ –≥–æ–¥—ã: –ó–∞—Ä–æ–∂–¥–µ–Ω–∏–µ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'},
                            {'type': 'text', 'content': '‚Ä¢ 1971: –ü–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –≤–∏—Ä—É—Å Creeper'},
                            {'type': 'text', 'content': '‚Ä¢ 1986: –í–∏—Ä—É—Å Brain - –ø–µ—Ä–≤—ã–π –≤–∏—Ä—É—Å –¥–ª—è –ü–ö'},
                            {'type': 'text', 'content': '‚Ä¢ 1988: –ß–µ—Ä–≤—å –ú–æ—Ä—Ä–∏—Å–∞ - –ø–µ—Ä–≤–∞—è –º–∞—Å—à—Ç–∞–±–Ω–∞—è —Å–µ—Ç–µ–≤–∞—è –∞—Ç–∞–∫–∞'},
                            {'type': 'text', 'content': 'üìÖ 1990-–µ –≥–æ–¥—ã: –≠—Ä–∞ –º–∞—Å—Å–æ–≤—ã—Ö –∞—Ç–∞–∫'},
                            {'type': 'text', 'content': '‚Ä¢ 1995: –ú–∞–∫—Ä–æ–≤–∏—Ä—É—Å—ã –¥–ª—è Microsoft Office'},
                            {'type': 'text', 'content': '‚Ä¢ 1999: –í–∏—Ä—É—Å Melissa - –º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ email'},
                            {'type': 'tip', 'content': '–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É—é—Ç, –∏ –∑–∞—â–∏—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω–æ–π.'}
                        ],
                        'quiz': [
                            {
                                'question': '–í –∫–∞–∫–æ–º –≥–æ–¥—É –ø–æ—è–≤–∏–ª—Å—è –ø–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –≤–∏—Ä—É—Å?',
                                'options': [
                                    '1965',
                                    '1971',
                                    '1980',
                                    '1990'
                                ],
                                'correct': 1,
                                'explanation': '–ü–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –≤–∏—Ä—É—Å Creeper –ø–æ—è–≤–∏–ª—Å—è –≤ 1971 –≥–æ–¥—É –≤ —Å–µ—Ç–∏ ARPANET.'
                            }
                        ]
                    }
                ]
            },
            {
                'id': 'module-2',
                'title': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª–µ–π –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
                'description': '–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –∑–∞—â–∏—Ç–∞ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.',
                'order': 2,
                'lessons': [
                    {
                        'id': 'lesson-2-1',
                        'title': '–ò—Å–∫—É—Å—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–¥–µ–∂–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π',
                        'type': 'text',
                        'duration': 55,
                        'order': 1,
                        'content': [
                            {'type': 'text', 'content': '–ü–∞—Ä–æ–ª—å - —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∏ —á–∞—Å—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è –∑–∞—â–∏—Ç—ã –≤–∞—à–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π. –°–ª–∞–±—ã–µ –ø–∞—Ä–æ–ª–∏ —è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏—á–∏–Ω–æ–π 80% —É—Å–ø–µ—à–Ω—ã—Ö –≤–∑–ª–æ–º–æ–≤.'},
                            {'type': 'tip', 'content': 'üéØ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è:'},
                            {'type': 'text', 'content': '‚Ä¢ üìè –î–ª–∏–Ω–∞ –Ω–µ –º–µ–Ω–µ–µ 12 —Å–∏–º–≤–æ–ª–æ–≤ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 16+)'},
                            {'type': 'text', 'content': '‚Ä¢ üî§ –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏ —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤'},
                            {'type': 'text', 'content': '‚Ä¢ üî¢ –ù–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤'},
                            {'type': 'example', 'content': '‚úÖ –ü—Ä–∏–º–µ—Ä –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è: J8$sK!23pL09@qW\n‚ùå –ü—Ä–∏–º–µ—Ä —Å–ª–∞–±–æ–≥–æ –ø–∞—Ä–æ–ª—è: 123456 –∏–ª–∏ password'},
                            {'type': 'warning', 'content': 'üö® –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤! –ü—Ä–∏ —É—Ç–µ—á–∫–µ –æ–¥–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–∞–º.'}
                        ],
                        'quiz': [
                            {
                                'question': '–ö–∞–∫–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è?',
                                'options': [
                                    '6 —Å–∏–º–≤–æ–ª–æ–≤',
                                    '8 —Å–∏–º–≤–æ–ª–æ–≤', 
                                    '12 —Å–∏–º–≤–æ–ª–æ–≤',
                                    '16 —Å–∏–º–≤–æ–ª–æ–≤'
                                ],
                                'correct': 2,
                                'explanation': '12 —Å–∏–º–≤–æ–ª–æ–≤ —Å—á–∏—Ç–∞–µ—Ç—Å—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω–æ–π –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.'
                            }
                        ]
                    }
                ]
            }
        ]
    },
    'phishing-protection': {
        'id': 'phishing-protection',
        'title': 'üé£ –ó–∞—â–∏—Ç–∞ –æ—Ç —Ñ–∏—à–∏–Ω–≥–∞ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏',
        'description': '–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—é –∏ –∑–∞—â–∏—Ç–µ –æ—Ç –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫. –ù–∞—É—á–∏—Ç–µ—Å—å –≤—ã—è–≤–ª—è—Ç—å —Ñ–∏—à–∏–Ω–≥ –∏ –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ.',
        'icon': 'bi-envelope-exclamation', 
        'difficulty': 'beginner',
        'estimated_time': '12 —á–∞—Å–æ–≤',
        'category': '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è',
        'level': '–ù–∞—á–∞–ª—å–Ω—ã–π',
        'rating': 4.9,
        'students_count': 8900,
        'final_exam': {
            'title': '–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ –∑–∞—â–∏—Ç–µ –æ—Ç —Ñ–∏—à–∏–Ω–≥–∞',
            'duration': 45,
            'passing_score': 75,
            'questions': [
                {
                    'question': '–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ñ–∏—à–∏–Ω–≥-–ø–∏—Å—å–º–æ?',
                    'options': [
                        '–ù–∞–ª–∏—á–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞ –∫–æ–º–ø–∞–Ω–∏–∏',
                        '–°—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π',
                        '–ì—Ä–∞–º–æ—Ç–Ω–∞—è –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è',
                        '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è'
                    ],
                    'correct': 1,
                    'explanation': '–°—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–∑–Ω–∞–∫ —Ñ–∏—à–∏–Ω–≥–∞, —Ç–∞–∫ –∫–∞–∫ –º–æ—à–µ–Ω–Ω–∏–∫–∏ —Å–æ–∑–¥–∞—é—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ.'
                }
            ]
        },
        'modules': [
            {
                'id': 'module-1',
                'title': '–û—Å–Ω–æ–≤—ã —Ñ–∏—à–∏–Ω–≥–∞ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏',
                'description': '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏—à–∏–Ω–≥, –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ—á–µ–º—É –æ–Ω —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω. –ò–∑—É—á–∏—Ç–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏.',
                'order': 1,
                'lessons': [
                    {
                        'id': 'lesson-1-1',
                        'title': '–ö–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–∏—à–∏–Ω–≥-–ø–∏—Å—å–º–æ: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
                        'type': 'text', 
                        'duration': 55,
                        'order': 1,
                        'content': [
                            {'type': 'text', 'content': '–§–∏—à–∏–Ω–≥-–ø–∏—Å—å–º–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—Å–µ –±–æ–ª–µ–µ –∏–∑–æ—â—Ä–µ–Ω–Ω—ã–º–∏ –∏ —Å–ª–æ–∂–Ω—ã–º–∏ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è. –ù–∞—É—á–∏—Ç–µ—Å—å –≤—ã—è–≤–ª—è—Ç—å –∏—Ö –ø–æ –∫–ª—é—á–µ–≤—ã–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º.'},
                            {'type': 'warning', 'content': 'üö© –°—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è - "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞!" –∏–ª–∏ "–°—Ä–æ—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ!"'},
                            {'type': 'warning', 'content': 'üö© –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ç–µ–∫—Å—Ç—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π'},
                            {'type': 'warning', 'content': 'üö© –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ - –Ω–∞–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å–æ—Ä –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π URL (–Ω–µ –∫–ª–∏–∫–∞–π—Ç–µ!)'},
                            {'type': 'tip', 'content': 'üí° –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ URL —Å–∞–π—Ç–∞ –ø–µ—Ä–µ–¥ –≤–≤–æ–¥–æ–º –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥–∞–Ω–Ω—ã—Ö.'}
                        ],
                        'quiz': [
                            {
                                'question': '–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—Å—Ç–æ—Ä–æ–∂–∏—Ç—å –≤–∞—Å –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –ø–∏—Å—å–º–µ?',
                                'options': [
                                    '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —à–∞–ø–∫–µ',
                                    '–°—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π',
                                    '–ù–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ø–æ–¥–≤–∞–ª–µ', 
                                    '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–∏—Å—å–º–∞'
                                ],
                                'correct': 1,
                                'explanation': '–ú–æ—à–µ–Ω–Ω–∏–∫–∏ —á–∞—Å—Ç–æ —Å–æ–∑–¥–∞—é—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ä–æ—á–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –æ—Ü–µ–Ω–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.'
                            }
                        ]
                    }
                ]
            }
        ]
    },
    'network-security': {
        'id': 'network-security',
        'title': 'üåê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–µ—Ç–µ–π –∏ Wi-Fi',
        'description': '–ó–∞—â–∏—Ç–∞ –¥–æ–º–∞—à–Ω–∏—Ö –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ç–µ–π, –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Wi-Fi, VPN –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.',
        'icon': 'bi-wifi',
        'difficulty': 'intermediate', 
        'estimated_time': '18 —á–∞—Å–æ–≤',
        'category': '–°–µ—Ç–µ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        'level': '–°—Ä–µ–¥–Ω–∏–π',
        'rating': 4.7,
        'students_count': 6700,
        'final_exam': {
            'title': '–≠–∫–∑–∞–º–µ–Ω –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–µ—Ç–µ–π',
            'duration': 75,
            'passing_score': 80,
            'questions': [
                {
                    'question': '–ö–∞–∫–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –¥–ª—è Wi-Fi —Å–µ—Ç–µ–π?',
                    'options': [
                        'WEP',
                        'WPA',
                        'WPA2',
                        'WPA3'
                    ],
                    'correct': 3,
                    'explanation': 'WPA3 - —Å–∞–º—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã—Ö —Å–µ—Ç–µ–π.'
                }
            ]
        },
        'modules': [
            {
                'id': 'module-1',
                'title': '–û—Å–Ω–æ–≤—ã —Å–µ—Ç–µ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
                'description': '–ü—Ä–∏–Ω—Ü–∏–ø—ã –∑–∞—â–∏—Ç—ã —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–µ—Ç–µ–≤—ã—Ö –∞—Ç–∞–∫.',
                'order': 1,
                'lessons': [
                    {
                        'id': 'lesson-1-1',
                        'title': '–ó–∞—â–∏—Ç–∞ –¥–æ–º–∞—à–Ω–µ–π Wi-Fi —Å–µ—Ç–∏: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
                        'type': 'text',
                        'duration': 80,
                        'order': 1,
                        'content': [
                            {'type': 'text', 'content': '–î–æ–º–∞—à–Ω—è—è Wi-Fi —Å–µ—Ç—å - —ç—Ç–æ –≤—Ö–æ–¥–Ω–∞—è –¥–≤–µ—Ä—å –≤ –≤–∞—à—É —Ü–∏—Ñ—Ä–æ–≤—É—é –∂–∏–∑–Ω—å. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–µ—Ä—å–µ–∑–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º, –≤–∫–ª—é—á–∞—è –∫—Ä–∞–∂—É –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø.'},
                            {'type': 'tip', 'content': 'üéØ –ö–ª—é—á–µ–≤—ã–µ —à–∞–≥–∏ –¥–ª—è –∑–∞—â–∏—Ç—ã Wi-Fi:'},
                            {'type': 'text', 'content': '1. üîê –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–æ—É—Ç–µ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'},
                            {'type': 'text', 'content': '2. üõ°Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WPA3 –∏–ª–∏ WPA2 —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (–Ω–∏–∫–æ–≥–¥–∞ WEP!)'},
                            {'type': 'text', 'content': '3. üîë –°–æ–∑–¥–∞–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è Wi-Fi —Å–µ—Ç–∏ (12+ —Å–∏–º–≤–æ–ª–æ–≤)'},
                            {'type': 'warning', 'content': 'üö® –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ Wi-Fi —Å–µ—Ç–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–µ–∑ VPN!'}
                        ],
                        'quiz': [
                            {
                                'question': '–ö–∞–∫–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Wi-Fi?',
                                'options': [
                                    'WEP',
                                    'WPA',
                                    'WPA2', 
                                    'WPA3'
                                ],
                                'correct': 3,
                                'explanation': 'WPA3 –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç—É –æ—Ç –∞—Ç–∞–∫ –ø–µ—Ä–µ–±–æ—Ä–∞ –ø–∞—Ä–æ–ª–µ–π.'
                            }
                        ]
                    }
                ]
            }
        ]
    }
}

def get_course_progress(course_id):
    """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫—É—Ä—Å—É"""
    if not current_user.is_authenticated:
        return {'completed': 0, 'total': 0, 'percentage': 0}
    
    from database import db
    from education.models import UserProgress
    
    completed_lessons = UserProgress.query.filter_by(
        user_id=current_user.id,
        course_id=course_id,
        completed=True
    ).count()
    
    total_lessons = 0
    if course_id in COURSES:
        for module in COURSES[course_id]['modules']:
            total_lessons += len(module['lessons'])
    
    percentage = int((completed_lessons / total_lessons) * 100) if total_lessons > 0 else 0
    
    return {
        'completed': completed_lessons,
        'total': total_lessons,
        'percentage': percentage
    }

def get_user_course_completion(course_id):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –∫—É—Ä—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ user_progress"""
    if not current_user.is_authenticated:
        return False
    
    # –í–º–µ—Å—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ª–∏ –≤—Å–µ —É—Ä–æ–∫–∏ –∫—É—Ä—Å–∞
    progress = get_course_progress(course_id)
    return progress['percentage'] == 100

def find_module_for_lesson(course_id, lesson_id):
    """–ù–∞–π—Ç–∏ –º–æ–¥—É–ª—å –¥–ª—è —É—Ä–æ–∫–∞"""
    course = COURSES.get(course_id)
    if course:
        for module in course['modules']:
            for lesson in module['lessons']:
                if lesson['id'] == lesson_id:
                    return module['id']
    return None

@education_bp.route('/')
def education_home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—É—á–µ–Ω–∏—è"""
    progress_data = {}
    completion_data = {}
    
    if current_user.is_authenticated:
        for course_id in COURSES:
            progress_data[course_id] = get_course_progress(course_id)
            completion_data[course_id] = get_user_course_completion(course_id)
    
    return render_template('education/home.html', 
                         courses=COURSES, 
                         progress=progress_data,
                         completions=completion_data)

@education_bp.route('/course/<course_id>')
@login_required
def course_detail(course_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫—É—Ä—Å–∞ —Å –º–æ–¥—É–ª—è–º–∏"""
    course = COURSES.get(course_id)
    if not course:
        return "–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    progress = get_course_progress(course_id)
    course_completed = get_user_course_completion(course_id)
    
    return render_template('education/course.html', 
                         course=course,
                         progress=progress,
                         course_completed=course_completed)

@education_bp.route('/course/<course_id>/lesson/<lesson_id>')
@login_required
def lesson_page(course_id, lesson_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–∞"""
    course = COURSES.get(course_id)
    if not course:
        return "–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    # –ù–∞—Ö–æ–¥–∏–º —É—Ä–æ–∫ –∏ –º–æ–¥—É–ª—å
    lesson_data = None
    module_data = None
    for module in course['modules']:
        for lesson in module['lessons']:
            if lesson['id'] == lesson_id:
                lesson_data = lesson
                module_data = module
                break
        if lesson_data:
            break
    
    if not lesson_data:
        return "–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    from education.models import UserProgress
    progress = UserProgress.query.filter_by(
        user_id=current_user.id,
        course_id=course_id,
        lesson_id=lesson_id
    ).first()
    
    lesson_progress = {
        'completed': progress.completed if progress else False,
        'score': progress.score if progress else 0
    }
    
    return render_template('education/lesson.html',
                         course=course,
                         module=module_data,
                         lesson=lesson_data,
                         progress=lesson_progress)

@education_bp.route('/course/<course_id>/final-exam')
@login_required
def final_exam(course_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞"""
    course = COURSES.get(course_id)
    if not course or 'final_exam' not in course:
        return "–≠–∫–∑–∞–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ª–∏ –≤—Å–µ —É—Ä–æ–∫–∏
    progress = get_course_progress(course_id)
    if progress['percentage'] < 100:
        return "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ —É—Ä–æ–∫–∏ –ø–µ—Ä–µ–¥ —Å–¥–∞—á–µ–π —ç–∫–∑–∞–º–µ–Ω–∞", 403
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–¥–∞–Ω –ª–∏ —É–∂–µ —ç–∫–∑–∞–º–µ–Ω
    if get_user_course_completion(course_id):
        return "–≠–∫–∑–∞–º–µ–Ω —É–∂–µ —Å–¥–∞–Ω", 403
    
    return render_template('education/final_exam.html',
                         course=course,
                         exam=course['final_exam'])

@education_bp.route('/api/complete-lesson', methods=['POST'])
@login_required
def complete_lesson():
    """–û—Ç–º–µ—Ç–∏—Ç—å —É—Ä–æ–∫ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π"""
    try:
        from database import db
        from education.models import UserProgress
        
        data = request.get_json()
        course_id = data.get('course_id')
        lesson_id = data.get('lesson_id')
        score = data.get('score', 100)
        time_spent = data.get('time_spent', 300)
        
        # –ù–∞—Ö–æ–¥–∏–º –º–æ–¥—É–ª—å –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞
        module_id = find_module_for_lesson(course_id, lesson_id)
        if not module_id:
            return jsonify({'error': '–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–∫–∞'}), 400
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        progress = UserProgress.query.filter_by(
            user_id=current_user.id,
            course_id=course_id,
            lesson_id=lesson_id
        ).first()
        
        if not progress:
            progress = UserProgress(
                user_id=current_user.id,
                course_id=course_id,
                module_id=module_id,
                lesson_id=lesson_id
            )
        
        progress.completed = True
        progress.score = score
        progress.completed_at = datetime.utcnow()
        progress.time_spent = time_spent
        
        db.session.add(progress)
        db.session.commit()
        
        # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫—É—Ä—Å–∞
        course_progress = get_course_progress(course_id)
        
        return jsonify({
            'success': True,
            'progress': {
                'completed': progress.completed,
                'score': progress.score
            },
            'course_progress': course_progress
        })
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@education_bp.route('/api/check-answer', methods=['POST'])
@login_required
def check_answer():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
    try:
        data = request.get_json()
        course_id = data.get('course_id')
        lesson_id = data.get('lesson_id')
        question_index = data.get('question_index', 0)
        user_answer = data.get('answer')
        
        # –ù–∞—Ö–æ–¥–∏–º —É—Ä–æ–∫ –∏ –≤–æ–ø—Ä–æ—Å
        course = COURSES.get(course_id)
        lesson_data = None
        
        for module in course['modules']:
            for lesson in module['lessons']:
                if lesson['id'] == lesson_id:
                    lesson_data = lesson
                    break
            if lesson_data:
                break
        
        if not lesson_data or 'quiz' not in lesson_data:
            return jsonify({'error': '–¢–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        if question_index >= len(lesson_data['quiz']):
            return jsonify({'error': '–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        question = lesson_data['quiz'][question_index]
        is_correct = int(user_answer) == question['correct']
        
        return jsonify({
            'correct': is_correct,
            'explanation': question['explanation']
        })
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@education_bp.route('/api/submit-final-exam', methods=['POST'])
@login_required
def submit_final_exam():
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞"""
    try:
        from database import db
        from education.models import UserProgress
        
        data = request.get_json()
        course_id = data.get('course_id')
        answers = data.get('answers', [])
        
        course = COURSES.get(course_id)
        if not course or 'final_exam' not in course:
            return jsonify({'error': '–ö—É—Ä—Å –∏–ª–∏ —ç–∫–∑–∞–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç—ã
        exam_questions = course['final_exam']['questions']
        correct_answers = 0
        
        for i, user_answer in enumerate(answers):
            if i < len(exam_questions) and int(user_answer) == exam_questions[i]['correct']:
                correct_answers += 1
        
        score = int((correct_answers / len(exam_questions)) * 100)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π —É—Ä–æ–∫ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç–∫–∑–∞–º–µ–Ω–∞
        exam_lesson_id = f"{course_id}-final-exam"
        progress = UserProgress.query.filter_by(
            user_id=current_user.id,
            course_id=course_id,
            lesson_id=exam_lesson_id
        ).first()
        
        if not progress:
            progress = UserProgress(
                user_id=current_user.id,
                course_id=course_id,
                module_id=f"{course_id}-exam-module",
                lesson_id=exam_lesson_id
            )
        
        progress.completed = True
        progress.score = score
        progress.completed_at = datetime.utcnow()
        progress.time_spent = course['final_exam']['duration'] * 60
        
        db.session.add(progress)
        db.session.commit()
        
        return jsonify({
            'success': True,
            'score': score,
            'correct_answers': correct_answers,
            'total_questions': len(exam_questions),
            'passed': score >= course['final_exam']['passing_score']
        })
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@education_bp.route('/api/complete-course', methods=['POST'])
@login_required
def complete_course():
    """–û—Ç–º–µ—Ç–∏—Ç—å –∫—É—Ä—Å –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π"""
    try:
        from database import db
        from education.models import UserProgress
        
        data = request.get_json()
        course_id = data.get('course_id')
        
        course = COURSES.get(course_id)
        if not course:
            return jsonify({'error': '–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —É—Ä–æ–∫
        course_completion_id = f"{course_id}-course-completion"
        progress = UserProgress.query.filter_by(
            user_id=current_user.id,
            course_id=course_id,
            lesson_id=course_completion_id
        ).first()
        
        if not progress:
            progress = UserProgress(
                user_id=current_user.id,
                course_id=course_id,
                module_id=f"{course_id}-completion-module",
                lesson_id=course_completion_id
            )
        
        progress.completed = True
        progress.score = 100
        progress.completed_at = datetime.utcnow()
        progress.time_spent = 0
        
        db.session.add(progress)
        db.session.commit()
        
        return jsonify({
            'success': True,
            'message': '–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!'
        })
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@education_bp.route('/achievements')
@login_required
def achievements():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    completed_courses = []
    total_courses = len(COURSES)
    completed_count = 0
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö
    for course_id in COURSES:
        if get_user_course_completion(course_id):
            completed_count += 1
            completed_courses.append({
                'course_id': course_id,
                'title': COURSES[course_id]['title'],
                'final_score': 100
            })
    
    return render_template('education/achievements.html',
                         completed_courses=completed_courses,
                         total_courses=total_courses,
                         completed_count=completed_count,
                         courses=COURSES,
                         completions={course_id: get_user_course_completion(course_id) for course_id in COURSES},
                         progress={course_id: get_course_progress(course_id) for course_id in COURSES})
