from flask import render_template, request, jsonify, session
from flask_login import login_required, current_user
from . import education_bp
from datetime import datetime
import json

# –ë–∞–∑–∞ –∫—É—Ä—Å–æ–≤
COURSES = {
    'cybersecurity-basics': {
        'id': 'cybersecurity-basics',
        'title': 'üîê –û—Å–Ω–æ–≤—ã –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        'description': '–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ü–∏—Ñ—Ä–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        'icon': 'bi-shield-check',
        'difficulty': 'beginner',
        'estimated_time': '3 —á–∞—Å–∞',
        'modules': [
            {
                'id': 'module-1',
                'title': '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
                'description': '–ë–∞–∑–æ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è –∏ —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è',
                'lessons': [
                    {
                        'id': 'lesson-1-1',
                        'title': '–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å?',
                        'type': 'text',
                        'duration': 10,
                        'content': [
                            {'type': 'text', 'content': '–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - —ç—Ç–æ –ø—Ä–∞–∫—Ç–∏–∫–∞ –∑–∞—â–∏—Ç—ã —Å–∏—Å—Ç–µ–º, —Å–µ—Ç–µ–π –∏ –ø—Ä–æ–≥—Ä–∞–º–º –æ—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∞—Ç–∞–∫.'},
                            {'type': 'tip', 'content': '–¶–µ–ª—å –∫–∏–±–µ—Ä–∞—Ç–∞–∫ - –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'},
                            {'type': 'warning', 'content': '–ï–∂–µ–≥–æ–¥–Ω–æ –∫–æ–º–ø–∞–Ω–∏–∏ —Ç–µ—Ä—è—é—Ç –º–∏–ª–ª–∏–æ–Ω—ã –¥–æ–ª–ª–∞—Ä–æ–≤ –∏–∑-–∑–∞ –∫–∏–±–µ—Ä–∞—Ç–∞–∫.'}
                        ],
                        'quiz': [
                            {
                                'question': '–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–ª—å—é –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏?',
                                'options': [
                                    '–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞',
                                    '–ó–∞—â–∏—Ç–∞ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–æ–≤',
                                    '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞',
                                    '–£–ª—É—á—à–µ–Ω–∏–µ –¥–∏–∑–∞–π–Ω–∞ —Å–∞–π—Ç–æ–≤'
                                ],
                                'correct': 1,
                                'explanation': '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∑–∞—â–∏—â–∞–µ—Ç —Ü–∏—Ñ—Ä–æ–≤—ã–µ –∞–∫—Ç–∏–≤—ã –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.'
                            }
                        ]
                    },
                    {
                        'id': 'lesson-1-2', 
                        'title': '–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑',
                        'type': 'text',
                        'duration': 15,
                        'content': [
                            {'type': 'text', 'content': '–°—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ç–∏–ø–æ–≤ –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑. –í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–∑ –Ω–∏—Ö:'},
                            {'type': 'warning', 'content': '–í–∏—Ä—É—Å—ã –∏ malware - –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–µ –ü–û, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–≤—Ä–µ–∂–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º—ã.'},
                            {'type': 'warning', 'content': '–§–∏—à–∏–Ω–≥ - –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ –ø–∏—Å—å–º–∞, –º–∞—Å–∫–∏—Ä—É—é—â–∏–µ—Å—è –ø–æ–¥ –ª–µ–≥–∏—Ç–∏–º–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏.'},
                            {'type': 'warning', 'content': 'DDoS-–∞—Ç–∞–∫–∏ - –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–æ–º.'},
                            {'type': 'tip', 'content': '–†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –ü–û –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å—ã –¥–ª—è –∑–∞—â–∏—Ç—ã.'}
                        ],
                        'quiz': [
                            {
                                'question': '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏—à–∏–Ω–≥?',
                                'options': [
                                    '–í–∏–¥ —Ä—ã–±–∞–ª–∫–∏',
                                    '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ –ø–∏—Å—å–º–∞ –¥–ª—è –∫—Ä–∞–∂–∏ –¥–∞–Ω–Ω—ã—Ö', 
                                    '–¢–∏–ø –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –≤–∏—Ä—É—Å–∞',
                                    '–°–ø–æ—Å–æ–± —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'
                                ],
                                'correct': 1,
                                'explanation': '–í–µ—Ä–Ω–æ! –§–∏—à–∏–Ω–≥ - —ç—Ç–æ —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–∏—Å–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –æ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π, –Ω–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –∫—Ä–∞–∂–∏ –¥–∞–Ω–Ω—ã—Ö.'
                            }
                        ]
                    }
                ]
            },
            {
                'id': 'module-2',
                'title': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª–µ–π',
                'description': '–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏', 
                'lessons': [
                    {
                        'id': 'lesson-2-1',
                        'title': '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å',
                        'type': 'text',
                        'duration': 20,
                        'content': [
                            {'type': 'text', 'content': '–ü–∞—Ä–æ–ª—å - —ç—Ç–æ –ø–µ—Ä–≤–∞—è –ª–∏–Ω–∏—è –∑–∞—â–∏—Ç—ã –≤–∞—à–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.'},
                            {'type': 'tip', 'content': '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª–∏–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ (12+ —Å–∏–º–≤–æ–ª–æ–≤) —Å –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.'},
                            {'type': 'example', 'content': '–•–æ—Ä–æ—à–∏–π –ø–∞—Ä–æ–ª—å: J8$sK!23pL09@qW\n–ü–ª–æ—Ö–æ–π –ø–∞—Ä–æ–ª—å: 123456'},
                            {'type': 'warning', 'content': '–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤!'}
                        ],
                        'quiz': [
                            {
                                'question': '–ö–∞–∫–æ–π –ø–∞—Ä–æ–ª—å —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π?',
                                'options': [
                                    '123456',
                                    'password', 
                                    'J8$sK!23pL09@qW',
                                    'qwerty'
                                ],
                                'correct': 2,
                                'explanation': '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –î–ª–∏–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞–∏–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã.'
                            }
                        ]
                    }
                ]
            }
        ]
    },
    'phishing-protection': {
        'id': 'phishing-protection',
        'title': 'üé£ –ó–∞—â–∏—Ç–∞ –æ—Ç —Ñ–∏—à–∏–Ω–≥–∞',
        'description': '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫',
        'icon': 'bi-envelope-exclamation', 
        'difficulty': 'beginner',
        'estimated_time': '2 —á–∞—Å–∞',
        'modules': [
            {
                'id': 'module-1',
                'title': '–û—Å–Ω–æ–≤—ã —Ñ–∏—à–∏–Ω–≥–∞',
                'description': '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏—à–∏–Ω–≥ –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç',
                'lessons': [
                    {
                        'id': 'lesson-1-1',
                        'title': '–ö–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–∏—à–∏–Ω–≥-–ø–∏—Å—å–º–æ',
                        'type': 'text', 
                        'duration': 25,
                        'content': [
                            {'type': 'text', 'content': '–§–∏—à–∏–Ω–≥-–ø–∏—Å—å–º–∞ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≤—Å–µ –±–æ–ª–µ–µ –∏–∑–æ—â—Ä–µ–Ω–Ω—ã–º–∏. –ù–∞—É—á–∏—Ç–µ—Å—å –∏—Ö —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å!'},
                            {'type': 'warning', 'content': '–ü—Ä–∏–∑–Ω–∞–∫–∏ —Ñ–∏—à–∏–Ω–≥-–ø–∏—Å—å–º–∞: —Å—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è, –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏, –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏.'},
                            {'type': 'tip', 'content': '–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ URL —Å–∞–π—Ç–∞ –ø–µ—Ä–µ–¥ –≤–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö.'},
                            {'type': 'example', 'content': '–ù–∞—Å—Ç–æ—è—â–∏–π –∞–¥—Ä–µ—Å: support@bank.com\n–ü–æ–¥–¥–µ–ª—å–Ω—ã–π: support@b4nk.com'}
                        ],
                        'quiz': [
                            {
                                'question': '–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—Å—Ç–æ—Ä–æ–∂–∏—Ç—å –≤ –ø–∏—Å—å–º–µ?',
                                'options': [
                                    '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏',
                                    '–°—Ä–æ—á–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π',
                                    '–ì—Ä–∞–º–æ—Ç–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫', 
                                    '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
                                ],
                                'correct': 1,
                                'explanation': '–í–µ—Ä–Ω–æ! –ú–æ—à–µ–Ω–Ω–∏–∫–∏ —á–∞—Å—Ç–æ —Å–æ–∑–¥–∞—é—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ä–æ—á–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏ –ø–æ–¥—É–º–∞—Ç—å.'
                            }
                        ]
                    }
                ]
            }
        ]
    }
}

def get_course_progress(course_id):
    """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫—É—Ä—Å—É"""
    if not current_user.is_authenticated:
        return {'completed': 0, 'total': 0, 'percentage': 0}
    
    from database import db
    from education.models import UserProgress
    
    completed_lessons = UserProgress.query.filter_by(
        user_id=current_user.id,
        course_id=course_id,
        completed=True
    ).count()
    
    total_lessons = 0
    if course_id in COURSES:
        for module in COURSES[course_id]['modules']:
            total_lessons += len(module['lessons'])
    
    return {
        'completed': completed_lessons,
        'total': total_lessons,
        'percentage': int((completed_lessons / total_lessons) * 100) if total_lessons > 0 else 0
    }

@education_bp.route('/')
def education_home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—É—á–µ–Ω–∏—è"""
    progress_data = {}
    if current_user.is_authenticated:
        for course_id in COURSES:
            progress_data[course_id] = get_course_progress(course_id)
    
    return render_template('education/home.html', 
                         courses=COURSES, 
                         progress=progress_data)

@education_bp.route('/course/<course_id>')
@login_required
def course_detail(course_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫—É—Ä—Å–∞ —Å –º–æ–¥—É–ª—è–º–∏"""
    course = COURSES.get(course_id)
    if not course:
        return "–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    progress = get_course_progress(course_id)
    
    return render_template('education/course.html', 
                         course=course,
                         progress=progress)

@education_bp.route('/course/<course_id>/lesson/<lesson_id>')
@login_required
def lesson_page(course_id, lesson_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–∞"""
    course = COURSES.get(course_id)
    if not course:
        return "–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    # –ù–∞—Ö–æ–¥–∏–º —É—Ä–æ–∫ –∏ –º–æ–¥—É–ª—å
    lesson_data = None
    module_data = None
    for module in course['modules']:
        for lesson in module['lessons']:
            if lesson['id'] == lesson_id:
                lesson_data = lesson
                module_data = module
                break
        if lesson_data:
            break
    
    if not lesson_data:
        return "–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", 404
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    from education.models import UserProgress
    progress = UserProgress.query.filter_by(
        user_id=current_user.id,
        course_id=course_id,
        lesson_id=lesson_id
    ).first()
    
    lesson_progress = {
        'completed': progress.completed if progress else False,
        'score': progress.score if progress else 0
    }
    
    return render_template('education/lesson.html',
                         course=course,
                         module=module_data,
                         lesson=lesson_data,
                         progress=lesson_progress)

@education_bp.route('/api/complete-lesson', methods=['POST'])
@login_required
def complete_lesson():
    """–û—Ç–º–µ—Ç–∏—Ç—å —É—Ä–æ–∫ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π"""
    try:
        from database import db
        from education.models import UserProgress
        
        data = request.get_json()
        course_id = data.get('course_id')
        lesson_id = data.get('lesson_id')
        score = data.get('score', 100)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        progress = UserProgress.query.filter_by(
            user_id=current_user.id,
            course_id=course_id,
            lesson_id=lesson_id
        ).first()
        
        if not progress:
            progress = UserProgress(
                user_id=current_user.id,
                course_id=course_id,
                lesson_id=lesson_id
            )
        
        progress.completed = True
        progress.score = score
        progress.completed_at = datetime.utcnow()
        progress.time_spent = data.get('time_spent', 300)
        
        db.session.add(progress)
        db.session.commit()
        
        # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫—É—Ä—Å–∞
        course_progress = get_course_progress(course_id)
        
        return jsonify({
            'success': True,
            'progress': {
                'completed': progress.completed,
                'score': progress.score
            },
            'course_progress': course_progress
        })
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@education_bp.route('/api/check-answer', methods=['POST'])
@login_required
def check_answer():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
    try:
        data = request.get_json()
        course_id = data.get('course_id')
        lesson_id = data.get('lesson_id')
        question_index = data.get('question_index', 0)
        user_answer = data.get('answer')
        
        # –ù–∞—Ö–æ–¥–∏–º —É—Ä–æ–∫ –∏ –≤–æ–ø—Ä–æ—Å
        course = COURSES.get(course_id)
        lesson_data = None
        
        for module in course['modules']:
            for lesson in module['lessons']:
                if lesson['id'] == lesson_id:
                    lesson_data = lesson
                    break
            if lesson_data:
                break
        
        if not lesson_data or 'quiz' not in lesson_data:
            return jsonify({'error': '–¢–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        if question_index >= len(lesson_data['quiz']):
            return jsonify({'error': '–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'}), 404
        
        question = lesson_data['quiz'][question_index]
        is_correct = int(user_answer) == question['correct']
        
        return jsonify({
            'correct': is_correct,
            'explanation': question['explanation']
        })
        
    except Exception as e:
        return jsonify({'error': str(e)}), 500