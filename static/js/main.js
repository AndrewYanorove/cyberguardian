// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞–π—Ç–∞ —Å –∫–∏–±–µ—Ä-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ CyberGuardian –∑–∞–≥—Ä—É–∂–µ–Ω!');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    initCyberEffects();
    initAnimations();
    initNavigation();
    initForms();
    initNotifications();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∏–±–µ—Ä-—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
function initCyberEffects() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∏–±–µ—Ä-—ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —Ç–µ–∫—Å—Ç–∞
    const cyberTexts = document.querySelectorAll('.cyber-text');
    cyberTexts.forEach(text => {
        text.addEventListener('mouseenter', function() {
            this.classList.add('cyber-glitch');
        });
        
        text.addEventListener('mouseleave', function() {
            this.classList.remove('cyber-glitch');
        });
    });
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –≤ —Ñ–æ–Ω–µ
    createCyberGrid();
    
    // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –º–∞—Ç—Ä–∏—Ü—ã
    createMatrixEffect();
    
    // –°–ª—É—á–∞–π–Ω—ã–µ –∫–∏–±–µ—Ä-—ç—Ñ—Ñ–µ–∫—Ç—ã –≤ —Ñ–æ–Ω–µ
    createCyberParticles();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
function initAnimations() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
                entry.target.classList.add('visible');
            }
        });
    }, observerOptions);
    
    // –ê–Ω–∏–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    document.querySelectorAll('.cyber-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(50px)';
        card.style.transition = 'all 0.8s ease';
        observer.observe(card);
    });
    
    // –ê–Ω–∏–º–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    document.querySelectorAll('.fade-in').forEach(item => {
        item.style.opacity = '0';
        item.style.transform = 'translateY(30px)';
        observer.observe(item);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function initNavigation() {
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
    
    // –ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const currentPage = window.location.pathname;
    document.querySelectorAll('.nav-link').forEach(link => {
        if (link.getAttribute('href') === currentPage) {
            link.classList.add('active');
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º
function initForms() {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', function(e) {
            const inputs = this.querySelectorAll('input[required]');
            let isValid = true;
            
            inputs.forEach(input => {
                if (!input.value.trim()) {
                    input.classList.add('is-invalid');
                    isValid = false;
                } else {
                    input.classList.remove('is-invalid');
                }
            });
            
            if (!isValid) {
                e.preventDefault();
                showCyberNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'danger');
            }
        });
    });
    
    // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º
    document.querySelectorAll('.cyber-input').forEach(input => {
        input.addEventListener('focus', function() {
            this.parentElement.classList.add('focused');
        });
        
        input.addEventListener('blur', function() {
            this.parentElement.classList.remove('focused');
        });
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∏–±–µ—Ä-—Å–µ—Ç–∫–∏
function createCyberGrid() {
    const grid = document.createElement('div');
    grid.className = 'cyber-grid';
    document.body.appendChild(grid);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã
function createMatrixEffect() {
    const matrix = document.createElement('div');
    matrix.className = 'matrix-effect';
    document.body.appendChild(matrix);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∏–±–µ—Ä-—á–∞—Å—Ç–∏—Ü
function createCyberParticles() {
    const particlesContainer = document.createElement('div');
    particlesContainer.style.position = 'fixed';
    particlesContainer.style.top = '0';
    particlesContainer.style.left = '0';
    particlesContainer.style.width = '100%';
    particlesContainer.style.height = '100%';
    particlesContainer.style.pointerEvents = 'none';
    particlesContainer.style.zIndex = '-1';
    particlesContainer.style.overflow = 'hidden';
    document.body.appendChild(particlesContainer);
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã
    for (let i = 0; i < 30; i++) {
        createCyberParticle(particlesContainer);
    }
}

function createCyberParticle(container) {
    const particle = document.createElement('div');
    const size = Math.random() * 3 + 1;
    const colors = ['#00ff88', '#0088ff', '#ff0088', '#8800ff'];
    
    particle.style.position = 'absolute';
    particle.style.width = size + 'px';
    particle.style.height = size + 'px';
    particle.style.background = colors[Math.floor(Math.random() * colors.length)];
    particle.style.borderRadius = '50%';
    particle.style.top = Math.random() * 100 + 'vh';
    particle.style.left = Math.random() * 100 + 'vw';
    particle.style.opacity = Math.random() * 0.3;
    particle.style.boxShadow = '0 0 ' + (size * 2) + 'px currentColor';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
    particle.style.animation = `
        moveParticle ${Math.random() * 10 + 5}s linear infinite,
        pulseParticle ${Math.random() * 3 + 2}s ease-in-out infinite
    `;
    
    container.appendChild(particle);
}

// –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —á–∞—Å—Ç–∏—Ü
const style = document.createElement('style');
style.textContent = `
    @keyframes moveParticle {
        0% { 
            transform: translate(0, 0) rotate(0deg); 
        }
        25% { 
            transform: translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px) rotate(90deg); 
        }
        50% { 
            transform: translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px) rotate(180deg); 
        }
        75% { 
            transform: translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px) rotate(270deg); 
        }
        100% { 
            transform: translate(0, 0) rotate(360deg); 
        }
    }
    
    @keyframes pulseParticle {
        0%, 100% { 
            opacity: 0.2; 
            transform: scale(1); 
        }
        50% { 
            opacity: 0.8; 
            transform: scale(1.5); 
        }
    }
`;
document.head.appendChild(style);

// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showCyberNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} cyber-notification`;
    notification.innerHTML = `
        <div class="d-flex align-items-center">
            <i class="bi ${getNotificationIcon(type)} me-2"></i>
            <span>${message}</span>
            <button type="button" class="btn-close ms-auto" onclick="this.parentElement.parentElement.remove()"></button>
        </div>
    `;
    
    // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.style.position = 'fixed';
    notification.style.top = '20px';
    notification.style.right = '20px';
    notification.style.zIndex = '9999';
    notification.style.minWidth = '300px';
    notification.style.maxWidth = '400px';
    notification.style.backdropFilter = 'blur(10px)';
    
    document.body.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentNode) {
            notification.remove();
        }
    }, 5000);
}

function getNotificationIcon(type) {
    const icons = {
        'success': 'bi-check-circle',
        'danger': 'bi-exclamation-circle',
        'warning': 'bi-exclamation-triangle',
        'info': 'bi-info-circle'
    };
    return icons[type] || 'bi-info-circle';
}

// –£—Ç–∏–ª–∏—Ç—ã
function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.CyberGuardian = {
    showNotification: showCyberNotification,
    utils: {
        formatFileSize,
        debounce
    },
    effects: {
        createCyberParticle,
        createMatrixEffect
    }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
window.addEventListener('resize', debounce(() => {
    // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    document.querySelectorAll('.cyber-grid, .matrix-effect').forEach(el => el.remove());
    createCyberGrid();
    createMatrixEffect();
}, 250));

// Service Worker –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω-—Ä–∞–±–æ—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw.js').catch(console.error);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é (—É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ base.html, –Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã)
function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    sidebar.classList.toggle('active');
    overlay.classList.toggle('active');
}

function closeSidebar() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    sidebar.classList.remove('active');
    overlay.classList.remove('active');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É (–º–æ–±–∏–ª—å–Ω—ã–µ)
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.sidebar-item').forEach(item => {
        item.addEventListener('click', () => {
            if (window.innerWidth < 992) {
                closeSidebar();
            }
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', () => {
        if (window.innerWidth >= 992) {
            closeSidebar();
        }
    });
});